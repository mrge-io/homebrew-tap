# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Mg < Formula
  desc "CLI tool for managing stacked PRs"
  homepage "https://github.com/mrge-io/mg-cli"
  version "1.0.26"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/mrge-io/homebrew-tap/releases/download/v1.0.26/homebrew-tap_1.0.26_darwin_x86_64.tar.gz"
      sha256 "9e8649324742c3a41f1d7b2e722d271f828d6d9892b79970d428f77f3a85fc48"

      def install
        bin.install "mg"
        # Install shell completions
        generate_completions_from_executable(bin/"mg", "completion", shells: [:bash, :zsh])
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/mrge-io/homebrew-tap/releases/download/v1.0.26/homebrew-tap_1.0.26_darwin_arm64.tar.gz"
      sha256 "d8107a6cfdd1ce99d7d7a67b73bf6dc227b175e43b093eb143ffcfd5b755f38b"

      def install
        bin.install "mg"
        # Install shell completions
        generate_completions_from_executable(bin/"mg", "completion", shells: [:bash, :zsh])
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/mrge-io/homebrew-tap/releases/download/v1.0.26/homebrew-tap_1.0.26_linux_x86_64.tar.gz"
        sha256 "1d42ebeac69028f312ba5ca58f3001fd3d7bb9b8ff08d377b379443d65221594"

        def install
          bin.install "mg"
          # Install shell completions
          generate_completions_from_executable(bin/"mg", "completion", shells: [:bash, :zsh])
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/mrge-io/homebrew-tap/releases/download/v1.0.26/homebrew-tap_1.0.26_linux_arm64.tar.gz"
        sha256 "ad8aaf3d9b6655f9c0613579f58dc69543d3b1ccead2ee43becf67b0da369538"

        def install
          bin.install "mg"
          # Install shell completions
          generate_completions_from_executable(bin/"mg", "completion", shells: [:bash, :zsh])
        end
      end
    end
  end
end
